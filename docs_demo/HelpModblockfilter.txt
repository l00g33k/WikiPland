%TOC%

=Introduction=

=Input Fields=

==Process==
* Start processing target file
* If the target filename contains 'blockfilter' then it is 
treated as a configuration file and the following fields 
are loaded from the file.

==Invert EXCLUDE==
* 

==(target file)==
* The target file to be procesed

==Reload cfg before processing==
* Reload the remembered 'blockfilter' configuration file 
before processing. This allows the configuration to be 
changed in a separate editor.

==(link to blockfilter_config file)==
* URL to view the configuration file

==Skip to==
* Skip all lines before this regex match. Defaults 
to '.' which means it matches the first line and 
start the processing.

==Scan to==
* 

==Exclude Line (!!)==
* 

==BLOCK START==
* 

==Block End==
* 

==Block Required==
* 

==Block Exclude (!!)==
* 

==Colorize ()==
* Colors matched expressions. There are three syntax:
** The first syntax is simply a regex. The matching patterns is colored with lime background
** The second syntax has background color prefix bracketted by !!.
Here green is the background is the background and android is the search term:
    !!green!!android
** The third syntax has foreground and background color prefix bracketted by !!. 
Here red is the foreground and yellow is the background color and com is the search term:
    !!red!!yellow!!com

==Perl eval==
* These expressions are eval'd for each input lines

==Pre eval==
* These expressions are eval'd before any input processing. 
They can be used for initialization.

==Statistics==
* These expressions are eval'd for each included lines. A separate 
hash is maintained for each of these expressions. The value of the 
expression is used as the key for the hash and the value is incremented 
as a counter. 
For example, if you have a list in a .csv file:
    apple,... other info...
    pear,... other info...
    apple,... other info...
    orange,... other info...
    orange,... other info...
    pear,... other info...
you can use this pattern:
    if(/^(.+?),/){($1);}else{undef;}
and you can set 'Hide line' to match anything (.) so 
nothing is displayed. You will get a report such as this at 
the end:
  statistics #1
    219   apple
      3   orange
     49   pear
==Hide line==
* Any line matching these expressions are processed, but 
are not displayed. This would be useful for computing statistics. 
See Statistics.

==Maximum lines to display==
* So you won't try to display 10,000 lines in the browser 
on your cell phone:)
